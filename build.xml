<?xml version="1.0" encoding="UTF-8"?>
<!--
Build configuration for achtung
-->
<project name="achtung" default="build">
    <property name="srcDir" value="${basedir}/src" />
    <property name="buildDir" value="${basedir}/build" />
    
    <target name="build" depends="clean,copyfiles,updateVersionToken,-css.minify,-js.minify,-tar-distfile"/>

    <target name="clean">
        <delete dir="${buildDir}/"/>
    </target>

    <target name="updateVersionToken">
        <replace dir="${buildDir}" token="%%VERSION%%" value="${version}">
            <include name="**/*.html" />
            <include name="**/*.achtung.*" />
            <include name="**/AUTHORS.txt" />
            <include name="**/LICENSE.txt" />
        </replace>
    </target>
            

    <target name="-prepare">
        <loadfile property="version" srcFile="${basedir}/version.txt" />
        <property name="distDir" value="${buildDir}/achtung-${version}" />
    </target>

    <target name="-tar-distfile">
        <tar destfile="${buildDir}/achtung-${version}.tar.bz2" 
             compression="bzip2"
             basedir="${buildDir}" 
             includes="achtung-${version}/**/*"
        />
        <tar destfile="${buildDir}/achtung-${version}.tar.gz" 
             compression="gzip"
             basedir="${buildDir}" 
             includes="achtung-${version}/**/*"
        />
    </target>

    <target name="copyfiles" depends="-prepare">
        <copy todir="${distDir}">
            <fileset dir="${srcDir}">
                <include name="**/*" />
                <exclude name="demo/**" />
            </fileset>
            <fileset dir="${basedir}">
                <include name="*.txt" />
            </fileset>
        </copy>
        <copy todir="${buildDir}/demo">
            <fileset dir="${srcDir}/demo" />
        </copy>
        <copy todir="${buildDir}/demo">
            <fileset dir="${srcDir}">
                <include name="*.js" />
                <include name="*.css" />
            </fileset>
            <fileset dir="${basedir}">
                <include name="*.txt" />
            </fileset>
        </copy>
    </target>

    <target name="-css.minify">
        <apply executable="minify" parallel="false" verbose="true" failonerror="true">
            <fileset refid="sources.css"/>
            <srcfile/>
            <mapper refid="sources.css.destination"/>
            <targetfile/>
        </apply>
    </target>

    <target name="-js.minify">
        <apply executable="minify" parallel="false" verbose="true" failonerror="true">
            <fileset refid="sources.js"/>
            <srcfile/>
            <mapper refid="sources.js.destination"/>
            <targetfile/>
        </apply>
    </target>

    <mapper id="sources.js.destination" type="glob" from="*.js" to="${buildDir}/*-min.js"/>
    <fileset dir="${buildDir}" id="sources.js">
        <exclude name="**/*-min.js" />
        <exclude name="**/*.min.js" />
        <include name="**/*.js"/>
    </fileset>

    <mapper id="sources.css.destination" type="glob" from="*.css" to="${buildDir}/*-min.css"/>
    <fileset dir="${buildDir}" id="sources.css">
        <exclude name="**/*-min.css" />
        <exclude name="**/*.min.css" />
        <include name="**/*.css"/>
    </fileset>
</project>
